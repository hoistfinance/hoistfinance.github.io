// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Contains code for event-based activation on both Outlook on web and Outlook on Windows.

/**
 * Checks if signature exists.
 * If not, displays the information bar for user.
 * If exists, insert signature into new item (appointment or message).
 * @param {*} eventObj Office event object
 * @returns
 */
function checkSignature(eventObj) {
  let user_info_str = Office.context.roamingSettings.get("user_info");
  if (!user_info_str) {
    display_insight_infobar();
  } else {
    let user_info = JSON.parse(user_info_str);

    if (Office.context.mailbox.item.getComposeTypeAsync) {
      //Find out if the compose type is "newEmail", "reply", or "forward" so that we can apply the correct template.
      Office.context.mailbox.item.getComposeTypeAsync(
        {
          asyncContext: {
            user_info: user_info,
            eventObj: eventObj,
          },
        },
        function (asyncResult) {
          if (asyncResult.status === "succeeded") {
            insert_auto_signature(
              asyncResult.value.composeType,
              asyncResult.asyncContext.user_info,
              asyncResult.asyncContext.eventObj
            );
          }
        }
      );
    } else {
      // Appointment item. Just use newMail pattern
      let user_info = JSON.parse(user_info_str);
      insert_auto_signature("newMail", user_info, eventObj);
    }
  }
}

/**
 * For Outlook on Windows only. Insert signature into appointment or message.
 * Outlook on Windows can use setSignatureAsync method on appointments and messages.
 * @param {*} compose_type The compose type (reply, forward, newMail)
 * @param {*} user_info Information details about the user
 * @param {*} eventObj Office event object
 */
function insert_auto_signature(compose_type, user_info, eventObj) {
  let template_name = get_template_name(compose_type);
  let signature_info = get_signature_info(template_name, user_info);
  addTemplateSignature(signature_info, eventObj);
}

/**
 * 
 * @param {*} signatureDetails object containing:
 *  "signature": The signature HTML of the template,
    "logoBase64": The base64 encoded logo image,
    "logoFileName": The filename of the logo image
 * @param {*} eventObj 
 * @param {*} signatureImageBase64 
 */
function addTemplateSignature(signatureDetails, eventObj, signatureImageBase64) {
  if (is_valid_data(signatureDetails.logoBase64) === true) {
    //If a base64 image was passed we need to attach it.
    Office.context.mailbox.item.addFileAttachmentFromBase64Async(
      signatureDetails.logoBase64,
      signatureDetails.logoFileName,
      {
        isInline: true,
      },
      function (result) {
        //After image is attached, insert the signature
        Office.context.mailbox.item.body.setSignatureAsync(
          signatureDetails.signature,
          {
            coercionType: "html",
            asyncContext: eventObj,
          },
          function (asyncResult) {
            asyncResult.asyncContext.completed();
          }
        );
      }
    );
  } else {
    //Image is not embedded, or is referenced from template HTML
    Office.context.mailbox.item.body.setSignatureAsync(
      signatureDetails.signature,
      {
        coercionType: "html",
        asyncContext: eventObj,
      },
      function (asyncResult) {
        asyncResult.asyncContext.completed();
      }
    );
  }
}

/**
 * Creates information bar to display when new message or appointment is created
 */
function display_insight_infobar() {
  Office.context.mailbox.item.notificationMessages.addAsync("fd90eb33431b46f58a68720c36154b4a", {
    type: "insightMessage",
    message: "Please set your signature with the 'Email Signature' add-in.",
    icon: "Icon.16x16",
    actions: [
      {
        actionType: "showTaskPane",
        actionText: "Set signatures",
        commandId: get_command_id(),
        contextData: "{''}",
      },
    ],
  });
}

/**
 * Gets template name (A,B,C) mapped based on the compose type
 * @param {*} compose_type The compose type (reply, forward, newMail)
 * @returns Name of the template to use for the compose type
 */
function get_template_name(compose_type) {
  if (compose_type === "reply") return Office.context.roamingSettings.get("reply");
  if (compose_type === "forward") return Office.context.roamingSettings.get("forward");
  return Office.context.roamingSettings.get("newMail");
}

/**
 * Gets HTML signature in requested template format for given user
 * @param {\} template_name Which template format to use (A,B,C)
 * @param {*} user_info Information details about the user
 * @returns HTML signature in requested template format
 */
function get_signature_info(template_name, user_info) {
  if (template_name === "templateB") return get_template_B_info(user_info);
  if (template_name === "templateC") return get_template_C_info(user_info);
  return get_template_A_info(user_info);
}

/**
 * Gets correct command id to match to item type (appointment or message)
 * @returns The command id
 */
function get_command_id() {
  if (Office.context.mailbox.item.itemType == "appointment") {
    return "MRCS_TpBtn1";
  }
  return "MRCS_TpBtn0";
}

/**
 * Gets HTML string for template A
 * Embeds the signature logo image into the HTML string
 * @param {*} user_info Information details about the user
 * @returns Object containing:
 *  "signature": The signature HTML of template A,
    "logoBase64": The base64 encoded logo image,
    "logoFileName": The filename of the logo image
 */
function get_template_A_info(user_info) {
  const logoFileName = "sample-logo.png";
  let str = "";
  if (is_valid_data(user_info.greeting)) {
    str += user_info.greeting + "<br/>";
  }

  str += "<table>";
  str += "<tr>";
  // Embed the logo using <img src='cid:...
  str +=
    "<td style='border-right: 1px solid #000000; padding-right: 5px;'><img src='cid:" +
    logoFileName +
    "' alt='MS Logo' width='24' height='24' /></td>";
  str += "<td style='padding-left: 5px;'>";
  str += "<strong>" + user_info.name + "</strong>";
  str += is_valid_data(user_info.pronoun) ? "&nbsp;" + user_info.pronoun : "";
  str += "<br/>";
  str += is_valid_data(user_info.job) ? user_info.job + "<br/>" : "";
  str += user_info.email + "<br/>";
  str += is_valid_data(user_info.phone) ? user_info.phone + "<br/>" : "";
  str += "</td>";
  str += "</tr>";
  str += "</table>";

  // return object with signature HTML, logo image base64 string, and filename to reference it with.
  return {
    signature: str,
    logoBase64:
      "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAJcBM8DASIAAhEBAxEB/8QAHAABAAICAwEAAAAAAAAAAAAAAAYHBQgCAwQB/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAEEAwUGAv/aAAwDAQACEAMQAAABufZ3l45fXmbx5s95vTX0gIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdcWrTNtJrAOlb6QPdkD1WLWDHV2G5UdZtTmpIMWtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw9YdsAzbbMuPK71QTIAAA9cRn7Qi02pcn9GHVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU5V1o1dDnl8K925YjeaudL6hm2IDnJLMw62EWJ6FTmg8VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKcq60augA+fR7szGPRm2k4s2S8kBi1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFOVdaNXQAAejz+g2sEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0JqOrrCr6cvwecID0ef0G1gkAAK8LDUzzLjAAKmLZUzmizAAAAAAI5DqehtHktU9l5ZUAAAAAAB01x7tWarN6sWYrMWYreyPFbrwlZ4KxuNhOymbmw6sMdIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwFY5djOa38a30rq7XuzgfBLfJW0Ued/RV0D0ef0R42sEgAFD3xQ8IH2dfYbYCQDWHZ7WGGJlkTlhsQJAAAAAULBdlachDdg4RcxyEgAAPHisBRcNk83qjsiSMS8lBX7QVvox3Wd90vcjx0bAUZelXn9euFrQvNtcJsDD5hW0IYdUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK79Z5rW0V6bfShn2oAADG5J5wRbtkXjp85ssMOoAAUPfFDwgfZ19htgJANYdntYYYmWROWGxAkxUXo6FoRiICVZavxfU51LmBsK8/olC4JmqghYl1an7WHqxPXrgWLH4eJvM6VG2WBrCdyquJkE3hAuO0de9hJeSgr9oK30afwCf5L9kihxoFe43D4O919lT6mrlr6Ou8fhcLY3tk9lZ/ESjtiT3YtuW672nW0k1PLX0nGDQvwXOolKLMt+wZxQ3qx0b+Y7I0uXrvH4TDXuusv7WnxEo7oi92Lclmu9qVtJNBX0bwYSp8+2nmBjazv5Bkoan3cUm13sitpLA+dVPY9fNopE1vpc/6os9Z7Lm2v2Qxa2+GMydPmgeQAAAAAAAAAAAAAAGqO12pb1n/AGxL22d9IHR32t+E+gADNWbioQaysgqc0GOkAAoe+KHhA+XEW6qIW6qIW7VvkCWROWGxEaktAyhfF3Q+z6z5AU5CtmOBqcmMOJ9e2pezZA6gt+oDjtZqntYVBWk8gZkbvpjY4qGttpa6Kg2MiVjFHwm9KLFh15siRyxiXkoK/aCt9Gk0ZZ91aKrmOhbMvoq9a+lpPB5zB3Onkdy01ctTnKRwuawtvo0ox144dbVcN2GqaMcQzGH7LG52EgM+jWv42nOyxfRb6L7wk3traGgOEijt3rZ5ZlNXLT5ekMNmcNc6ZKcdeGHW1XDNh6kjHEszhu6xudgsRl6nocdE+tzv9pzl06zVXm61jN4fPOCh7t4fY8VxDPvy51Ca87QwaiGYWzWDVa9cLKrW71Obu3Xe6sGozwq88AAAAAAAAAAAAAAA1L201LgAyeMes8q5RbL2+jyTlOsuwh1jy70Veb+fTBqQAAAFD3xQ8IH8+9h0Nshqa2yGpvLbDWYxMsicsNiNUtp9TzlYVe20W0JARjXHabViHK7aSuA+VBb9QHHazVPawrinNr6FIVy4fSUTqnRtb3627HygVF3pRcGyOt2yJIxLyUFftBW+jE/zbeAthmDTUXevz7h1lJ4POYO91sjuWmrlqc5SOFzWFt9HJLkpu5KnOKzsys/OGB/fn2/1+w/DnXGt4fzQrg2HYuWZ8r15egnLILope6KfL0hhszhrfRSe4aeuGpzasrNrLzignZ19l7rthKCv3Xirz3yWxKfZ9tZQ1/FAIjLoR7uVcNj2udyESeK8tRJHmSRs9ZloVfZeOjPRR5AAAAAAAAAAAAAAABqXtpqXAAAC27Zqi15AAAAAAKHvih4QPs6+w2wEgGsOz2sMMTLInLDYjVTauhiCTqC/TbNCZtIeUjmu8njMF50htAV1UFv1AcdrNU9rD1Nf8aXZB/RaxrJhtnNYj7sFr7eRyou9KLGyOt2xRKhLyUFftBW+jT+AT/JfskUONApPB5zB7Lu5HctNXLU5ykcLmsLb6OSXJTdyVOcVnZlZ+cMD+/Pt/r9h6GvmgKnOeaaQuxM21sThzUOMozFSGPbLu5BdFL3RU52kMNmcNb6KT3DT1w1ObVlZtZecUE7OvsvddsJQd+VVT5iGSeMfbfSbDolLddw46Yx90S92T92aDcuOx7exJDXtxUuXj6RsWujnD7VObaWxlIzNcevDHTAAAAAAAAAAAAAAAal7aalwAAAt216oteQAAAAACh74oeED7OvsNsBIBrDs9rDDEyyJyw2IwOeS1Q6tg6Kh4ZTFhN4p4wLPPRbvz7Kqqgt+oIcdrNU9rChodsbryc7PqYTaEvg2Rrq6SD0HtVrKY/J4wWlcWvewh5KCv2grnRp/AJ/kv2SKHGgUng85g9l3cjuWmrlqc5SOFzWFt9HJLkpu5KnOKzsys/OGB/fn2/1+w9PXDiNfxlHd/Py3+xsXxQdjpHLjlvyC6KXuily9IYbM4a30UnuGnrhqc2rKzay84oJ2dfZe67YTGZNrOB196bmqW/2Pjz2BZLcqwHkR47rppO0cOtwsF2FquMcOyGPWN1MPHG3mv9+Mr6sfbvx+To8gGLXgAAAAAAAAAAAAAANdtiRqV9venYYoAFu2vVFryAAAAAAQibirOVogABW9kCrMrPgA83pFcxq6xR+YtgYLOgBGInaYqu0OwMVlRVeIusVBM5YAGMyYqrw3GK/sAOqCz96sQHOyFPsPFQCHeKfMl2Iy48V4b45892IjLjxXRyRkQFPnu2GOh5IZPnqzV+Rn73Yj+Bnzzhh8wIxQzyT56sROWHisjkjIgPKePdsMdB09xMLwdoMt+q8pYB6x2RMWvB5wcWsV7uVX22e92IfLebHRDzhAAAAAAAAAAAAAAAAAdPcKmqra7Fw1fT+AFu2vVFryAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARaUiDTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK38OEu2EGntWSImLyeuR5u07HHzHrPOeh1dJ62FzQdXA9B4j2uvqPSx+QB4z2MTlirrRw+YDrwxhPdh8lCYGElm3l9QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQlk1vZ8IHZUN9pDb0qqVkAuKpbhPlF3rVxaNMTyDE0gnK3yAYO5aOLJwWawsrFpG7qRLMpm5ohDPzIl4qbuqlIZeWw6yypbppewis5t0WQa+2lj8gQzN1nOTFW1VMvJ6JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUdeNVdUJ5Aeyzjhrfs7RxamdJPL6hrJfVXXlCrZTJqtLTojMz8+Q606mlatBSbJwk0SneFlLgYnESyqiwKz5WNCrLSjVgFOXHXuDOMwwsuKjvbA1+WBzgtpy7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARjGToAI5IxxAAzEAABAwMCAwYGAgIDAQAAAAAEAgMFAAEGEDUWIDQHETAxMzYSExQVUHAyYCFAIjewJP/aAAgBAQABBQL/AMb2SlhAqj5EU636WNLHDbkp4gjRN7pVG5A63QxDJLX6ScWhpElkNOuOPOcgz7wzkbkDTlJvZSf0fJTow1GmEmL8CPkSgVRkwKZ+jZKRGATJS5Rvixs2SLQJTRjH6K7Qv8FMl3tSVJVbwhR3ynI3H2Wqta1rfortD6mkLUi7JSVeAlKlqjcfWuh2Gh2v0Z2h9Tq08tumX0OcsbClF1Hx4oSf0d2h9TyskrRTbiHLAAFGqjIUYT9I9ofU8w3UoSlCf0j2h9TzDdT+ku0PqeYbqf0l2h9TzDdT/vkTsSO4CcGan/XdcQ0j7zGfE2tDiP6s+80w3lhKZN+9r2vyjdTz5DkL0ZIcYk0jMCbr5T8rIHO4xJqEyV8+T8TOZRxrQZ94Z+IMsfHeM+v5bPEr9cSv1xK/XEr9cSv03kbynKmjlml1AnLDM/ql/wDFpKfYZosl8pynG0OWeGWjlG6nnzvfaa9Xlmt5rEPcfiZy0pE5phram8f8AsocRr75EV98iKYdbfa0M6O3lyMevfyWhTa6YQp1/wDqclLChVIyZR1+V5hDlOsrb1G6nnzvfaa9Xlmt5rEPcfiTkWzKikYzLtLicUIW6lNkp8DPdl0xjYNDOjt5U0067X0hdfSF0wIX8+pqF+rc+ySfxQkNYNf9RNMHDbkp0gjwnhU3paVIuN1PPne+016vLNbzWIe49ZGRDj2zcwV3uZLMrvbIpm1xstkm6jcojyr2/wA20ymWIikcXyNXzCR7mFXWzUlIiRzRuYPqurJpm92cpl0XjMtGdUlSVpyE12Oi5eeLkxdAMmODDgMjMkJSjOjt5Vhvq8knOFDH8SG1EzRJchUjOlDHcSG1FThBRx+RNoUueklXayCQTeNnRiValksCtFZJfvXPSV6RPSVqGyVXeEYOY3pIzpQ53EhtRM2QUafkTaFLnpJV2sgPTeNnRilchhg4iCskvS5ySVVpqTtTGRGooCbDKvpe9rWOyAVm72QSC6+8ydNT0ii4eRtquw80+3+DkcitTrjjrnhqSlVmQlqL58732mvV5ZreaxD3Hpk0+mPp91x93lgJ0iMWM+0SxXaH6NX8hOkmpBuNAMJfMJ5MMlljlZr7e5MN9w0Z0dvKsN9Xknt4rGt6qc3fmxeQUQ1Rb6BhjinTCOQV90Z+OLQaJU3u/Ni8gohrSclkhWedcec5cUKLcu+62wzLyjx6+UEx8J6NNaOG/BNOrbuyShfiRsESTQQQwbfPne+0i/wr4yRXGaK4zRXGaK4zRRr31JtYh7jrI5K0ZHLUpa6HZdIdFxE9xLmGv2TJxJ0drhkpcQ2u0P0av5CdJ2gEXUfUYIs44fGIhtvKMfbBHq17puePeagZzH1xYekbizhoMJjS46Sozo7eVQMi1Hr4kFriQWh58Z8ip7eKxreqnN30j4QspsnHSm0Xte16hXvkSlZi9ezNNoU44JjoyUG46wptaVIVWHv3sRU3u+gEGWU2TjpTaL2va9Qj3yJWpcywITi1OLpptx1wfHS12XjTvcdGmB0AK6aSGM0IPlB13idAMffeTw4F3G446hKkqSqoU24Jv4RkhbdNOoc8COjSjrxsQKF4Wd774OIe46zQy5MzTDTj70HFsRYujiEOIymI+2F6Qhf10V2h+jV/ITpM6Te05UIZaPlBChi2pEZJgPBrVcGtUAP9IFnuy6YxsGhnR28uSK3Op7eKxreqnN3qHYSTJ6ZWylqSpu/wuVLRKZB7hluhoYYAr7iB3tOtO1kabImaxu/dM1N7vUMwkmT0yplLUnTN+56srJ+bIUhKlriY9sAfS9rXsGGOJR7/ANMFe973rFA7Ov65YEm7WmPv/PifwrJV7UlSVW1FGfKcjYBlqrWta3hZ3vunfau+1d9q77V321xD3HRDl3iKwMazsryZSNYqD0wB34ovtD9Gr+QnSZ+HdbGiFKQoTIJYeo7L2lXHeaIarPdl0xjYNDOjt5ckVudT28VjW9VObvWNb1pmXUVbzpakoRKzzrilqUtVJvdKnnXHl1ju81N7vWMbxpmPU036tGOfNLrFWbOSfLli/hitAZUoJniCQriCQriCQomaNIY0w5X/AMX4ZClIuyUm9ITdao3H1rodlodvxM732mvV+W3Xy26+W3Xy26+W3U1vFYh7jf8ARt5V2d93LI91o+3lXZ56HaH6NX8hOkebQ81PY+THr5IGVdiy0KStGe7LpjGwaGdHbyrDfV7rV3Wru0nt4rGt6qc3esa3rTMuoq3nWWG3+PQeKkH0Fglia47vNTe71jG8aZj1NN+rrhvd87lzHofBw30PxHZ5a3w+Nne+016vLNbzWIe46KauwVWEF2HmOTLirCwemBs/BDdofo1fyE6TSQgow25eHKqSjDY6+mGv3egc92XTGNg0M6O3lWG+ryT28VjW9VObvWNb1pmXUVbzqRc+cfWKhofJpxCXESo30Z9Y7vNTe71jG8aZj1NN+rRzfyjaxoizEpy5Wj44nTH48AyP+yRlfZIyvskZX2SMq0NFXv8AZIygwxw0fiOzz+HjZ3vtNeryzW81iHuOs3DuPL0m90qxudakWtCyWBGMilVSplNoW65HDJDA7Q/Rq/kJ0kpMSrUn98l6wuUKLNqbbbdiNMB2bPdl0xN1LkBoZ0dvKsN9Xknt4rGt6qc3esa3rTMuoq3nRKfgJrDnU65E6l6XrHd5qb3esY3jTMeppv1aywb5Z2kHLoLRo862y3HSoxzxrFiRFWulVQMh9AU2tLiNJqVbBbYKIZIjJ9l6vP8AE9nn8PGzvfaa9Xlmt5rEPcdT0cmTj3m3GXdBMglhkuZTLqsWUSW5phETf4q7Q/Rq/kJ0mZDXHnKEIeEJZzL/AITeRlSLOmNCXChc3buuB0AkDAFY1NyRkzRnR28qw31eSe3isa3qpzd6xretMy6iredZKNdiTph1xh4fJbfCfkLzremO7zU3u9YxvGmY9TTfq1KCJODebWy7oNLyDFlz8iqxJD5KmXFsuxB6Dxspj7tu6CGlCXTkR9rETci9a/8Am9RQSzi0JShH4js8/h42d77TXq8s1vNYh7j0yKCalEnCEhPclv8AN8fxhbirWta1dofo1fyE6TI4pMoEQy6O9yYrAOOu0WwgoWRDeAL0w33DRnR28qw31eSe3isa3qpzd6xretMy6iredSwKDxSh3hXte6/dWO7zU3u9YxvGmY9TTfq6TMW2egsZ8V3kQlS149FOCXWlK0TEI6NfljgCDnI0JkEf8FMwJsdz9nn8PGm8ebkzeDWaThzKVcpmJtEl8Gs1E4y3HyGpI7BLRmIguXcw8217YhI0Nhqe+NiAI/kn4hEsng1muDWaaT8DVSEeGegnDmr3vh5vezhrlRuPRoKtZEASQaIw1u9+DX6hMatHHU6j5jXDLdcNN1ERaY5XIdAoKL4abqOg0BmUbAtklcNN1HQaAzNJeKTIOcNN1w03qUMwU2RjTd78Nld4+NItcqKHdB4aboCCQIXRkA2SVw03UbCICL0l4pMg5w03ScbbsrV5pp5snHRV0vGyrXtjhtD40igwhQ7amxQRd3savXDhtN42Te4mPBtXQhKEfhJnGRDKko4yPd5Ozz+H6UeabeamMTp9l1h3Ts8/h+lpGPEkGpjGCxNOzz+H6YmIIGSrFYomLX/Sz8rbEN4zaqPyqOJX/sz2SFATGuavvDxGJuuvQH94F9+/Ais3jBUA4mV8eOjkjEaEEMDpacbdbWpKEDlDEaEPsDpacbebJJGGSzLRjy6dcbabYfYIRVyxEvuLQ2gcgcizJwb7+hRYwqRpOPJXRSoyxdOLQ2i0zFXXnd7Xg8M9uU9LRjSxiByUf3W5DQmacTwtT0qqdvDx6QomHveDyqsucXIzw7SGGFWspMde8DldZk6s6amTW4KGhYJ6YsXiAS2scki42Tyv292f7PR//YGS7DBMnSDUFAMRT9Hv/SgwEXeednMWZaDxQgx+My73U64hpq31uUylsRjPlzwRcQ1hntzKJIk6SExAFDMzEvwDsOamQjv7p8horNeHIapzGRECYVJvGjZ+D3txUqh7H8JHWXJaZ8D8Y8LKIfgMMYWdL9oa1fWiNpaErPk2bl8nv8WN9n+z0d/2Bkuw9nqbfS6EtIIHSJPQBA+YOpVGHjSI2Xe6svXdGO9n6LWi6zxFlQuGe3Ikk1Ep96yipE7Ijw8IZIHjP7oL79qeMZCjOzxhVHDoLDU+UGNABfQRWhjCChVvEgM46F9BEZ+GpwfGZFs+MUqyUyK+IMmyRu7kD2fEt/TOLQ020Uk3Mcl2Hs96LSYJdDjcal/urEqMGSF2d/H87LvdU8Lc2HwOQbaXWdyLTlYZ7cFV9hyxKrKTOybcUFBHrkgP7ofjJr0nw5NUxiC1uiDsiD1GptNZdyCJTN5hTiEuINxRaH1Y5OE1CxAsW3UhibliWsZkyV8NqROywyjI3GYp2KH0Vaykm4o62QrHJwmoeNYjBJuCfPmKncZZOeTAZDensVbTFwQS4+LmokWUaTjk4NQuKPvPtNoab/vGTrJTEYZHLCjtckcIREYVHLCA/wDYD//EADsRAAAFAgIGBwUIAgMAAAAAAAABAgMEBRESIRAxMzRRcRMUIjJAQdEVUoGRoSAjQlBgYWLwcLGQoOH/2gAIAQMBAT8B/wCHVKTUdkiJRjPtPfIS6MpPaZz/AGBkaTsf6JiUp17NWRCPEajlZBaZMJqQXbIS6Y6xmWZfoemPRWz+9LPiCMjK5fZNRJK5ipOxnFfdFnx/Q8aa7GPsHlwESptSMjyPTLqjTGRZmJMx2QfbP9FRKq6zkrMhLqjr+RZF/hUiM8iDsd1nvlbxkeG7IubZD2RK4fUeyJXD6iREdj26QtYj0VJou6eYnQzirt5flUSmuyM9RCNCajd0s+IUhKywqIS6N+Jj5BbamzwqKx+KoXdWDO2sdIjiK2ojNFv3DFRYdRc1WMVWWiQsiRqL8ojxnJCsKBEpTTOa8z+y/GbfKyyEukuM9pGZeJoXdWKnuq/756WIEdTSTNPkQqzKGniJBWyDECOppJmjyB0qObmK2XAdRj2tgIVGmJaT0jWoJI1HYhFo7SCu7mY6lH9whJpDSy+7yMLSaFYVBmBHNtJmjyHsqObmK2XAdRj2tgIVGmJaT0jWrRBpanyxrySG6fGb1ICoUdWtBCfSktINxs8hDgrlKy1BmmR2y7t+YOGwf4C+Qk0ZtRXayMLQpCsKtfgULUg8STESs/hf+YQtLhYkncvsSqi1Hy1nwEqe7J72rh4mhd1YeaS8g0K1D2RG4CqRW460kgRtijkQre3Ll6iPsUciFTqCo5khvWKbUXHl9G4HEY0GniIDjbb5Lc1EFVWPbsnc+Rg5sxKsZmYZc6Rsl8RWUEmRfiQj7JPIhU6guOZIb1imVFx9fRuB1ONBpMU+N1h4knqGREJVZXiszqDVZfSfbzE6aqYskI1COylhskJFSqaml9E0EVOSg74riJJKS1jIVuOWTxcvBsSXGDugxEq7bvZcyP6B+S0wm6zEurOO9lvIvr4uhd1YlP8AQNG5a9h7d/h9f/BOm9aUR2tYRtijkQre3Ll6iPsUciFb3guXqKTvSfjoiRjkOkggxGbYTZBAn2lHhJRXBERZEK5ty5eoj7JPIhWt4LkKRvRfEHqFCLNZ8hUVGmMsy008ryUaFQ2FndSSHUY/uEG2kNFZBWFW3U/C38ZQu6sVPdV/3z0xtijkQre3Ll6iPsUciFb3guXqKTvSfjooRFiWYqSlJjKNOiMalNJNWuwrm3Ll6iPsk8iFa3guQpG9F8QeoUV3C8aOIeaJ1s0H5h5hbK8CwRXyINYor6TWVraKkclh4zJR2P8Acdbke+fzESPLkINfSGXDMxK6032HjP8AMaF3Vip7qv8AvnpjbFHIhW9uXL1EfYo5EK3vBcvUUnek/HRTpXV3rnqMdlaeJGE0yMlWLDorm3Ll6iPsk8iFa3guQpG9F8QeoIWaFEpIhTkSU/y4BxpDhWWVw3HabzQmwrCGTauo+15CmVFJpJpw8/IKSSisogUKOk7kggtaUJxKPIVGb1leXdL8xZlOsbM7ByfIdTgUrLSmoyUlYlB59x9WJw7hNRkpKxKDz7j6sTh3DTq2lYkHmPacr3/9aGZbzHcUFVWUorYg3PkNlZKg8+4+eJw7hNSkpKxKDz63lYlncNOraViQeY9pyve/1oIzLMg3VJKMsQVVpSvMKWpZ3UehqfIaKyVA6xJ4h6Q693zv/wBNv//EAC0RAAIBAwMDAwMDBQAAAAAAAAECAAMRMQQQMhITIUBBUSBQYBQiUkJhcJCg/9oACAECAQE/Af8ATrmJQ/lHoW4/hSUS0VAuN3phsx6JX8HpMgz9dUocfg6VCmIlZW3esFjOWz+FJWK5j1i3+FmUrn1ioWxOw87DxkK5i6fx5lROg/akpFolMLiEXj6f+MItn1Wmwdriag4i1VIlZwx8faFQtiJRC5+lkDZj0Cvkep02DK3A7rTWw8SsoVvEWmtsTsredtfiVaNvI2SgBmdtfiPQBxCLRaa2xOyt7ztr8SrRt5G1Oj1eTBSUe0NNT7SpRsLiU6ZeLRUToX4j0B7Qi3ob2iaj+UBvj6HqhY9Qt6nTYMYdQsZ2ElZAp8ROImo5ReIlaqV8CUqpY2MIuJTIDXM7y+07j5im4vK4/dFwJWqlfAlKqWNjCLiUl6m2euf6YK7DMqVOs2EVekWlWsQbCCs4iP1i81C+/o1criJXBzGcLmPXJx6vTYMdukXn6n+0qVOuJxE1HKLxE1HKUOeyL1G0VAuJ1DG2o5RcCajlKHPbTe8q8DvS5jYop9p21+IFAxK/D7jpsGVuB3TiJqOUXiJqOUoc9tNkyrfo2XjNRyi4E1HKUOe2nP7rRhcWjKVNjsP2N52q9StmdbfMRXYXvH6x4b7jpsGVuB3TiJqOUXiJqOUoc9qT9LTM7KbajlFwJqOUoc9gbSnUDwgHMCgYlcLaUavsYRedtfiE2lWp1n7irlcQ1GPg791/mMxbM7r/ADGYtmAkeRO8/wA7K7Lid54KjCMxbM7r/MZi2YCR5E7z/O4rOIazwm+y1GE77xmLZ/42/wD/xABNEAABAgMCCAYOCAYBBAMAAAABAgMABBEQEhMhMUFRcXKxICIyYXPBBRQjMDRCUoGCkZKhstEzUGBicHST4RU1Q1Oi8CRAY4OwlMLx/9oACAEBAAY/Av8A03t1Sr7vkJ69EdxXx86FZR+C9+YcCdAzmCiWqw3p8Y/KwKSSCMhEBudGFT5Y5Q+cYRhwLTzfgmVuKCEjKSYLcin/AMihuEFx1alrOc8HCMOKbVzQG5wYJXljkn5QFJIIOQj8EChju7vMeKPPF6YcvaE5h3nuK+JnQrJAQe5O+QrPqP4GjDGq1clAymCmuCa8hOfX30Id7u1znjDzwHma3ecU/AuTI8hXVFHMfPFUmo73g2GytXNmgOThDy/J8UfOKAUH4Fyewrqsqk0ijnFOnN3gJQkqUcgEBydNxP8AbTlgNstpQkZh+BsnsK6uBiOLRFMitHBC1jAteUoYzqEUZRxs6zlP4Hyewrq4VFcYRVJijDfFzrPJEBa+7O+UrINQ/BGT2FdXDa2xvgJQkJSMgH4JSewrq4bW2nf+CcnsK6uG1tp3/gnJ7Curhtbad/1Bg3J1u8PJqrdFZWYQ7TLQ4x5v+oK3FpQkZyYp20n2TAW2oKSchB+y5ceWlCRnMNKlwbrQI43jRQih4TW2nf3jtZEshwXAqpVHgLXtmEp7SaxmnLPCflxJtKDTikVvnHQx4C17ZhqUXKtoC64wrQK99T2OYUU303nSNGixL7CyhxOQiGZsCl9OMaDn7+tzLdSTHgrftR4K37UeCt+1HgrftR4K37UJT2q3jNOVYrjdxQaIHXYlN7uLhosdf2VqYLcqA8vyvFHzjCTDhWc2gWcYRVPGHBa207+8DoU7zYjaHCnfzC99kr6Xwnvt88lxsFO61i945Uoaq95wsy6lpFaVVH8wY9qP5gx7UJdZWFoVjChnte6M7uE3tjfYW1YlJNDYhtPKUoAfZS6ThHfIT16Io4q63/bTk/fhVyK0xjGLTa1tp394HQp3mxG0OFO/mF77JX0vhPfcE4bi0421jxYohhLw8pCx1wF9kSG2h/TSaqV8oCUgBIxADvKOnTuNsn0dr3RndacE0tymW6mseCTH6ZjwSY/TMN/8V/lD+mbO2JdQQ6eUDkVFO1/PfEYd9QW9mpkT9kr77gToGcwUS9WG9PjH5d6q3xToiihSGttO/vA6FO82I2hwp38wvfZK+l8J4F+aeSjQnOfNFJKUAHlOnqEeEpRzJbEeGn2E/KO7IZeGq6YCHqyrh8vk+uKi1hTCGl4QkG/WPB5X1K+ceDyvqV84Qs5VJBswk06E15Kc6vNFJOVQhOl3GfVHhKRqbTHGWy7tN/KAidaMufLGNP7QFJIUk4wRDk0ylClpKRRWTGYEu+0ylIVe4gNrcq2zLlLYoCoGu+G5V1lhKFA40g1ya7HujO62a1J6+C6whtkpQcVQY+hl/UfnDcu42yEqrkB0WOsIaZKUGgqDH0Mv6j84Qy8hlCCCSRXFQQUSjeF++rJGJxCNSI42Cc1pgNujAOHJU4j5+BhH3Agb4pKy+LynD1RicbTqRGNbataIpMy4I0tnqi+w4FaRnFrrCGmSlCqCoMfQy/qPzgNPIZQi6SSKwUSjeF++rJGJxCdSI42Cc1pgNujAOHJU4j5+DemHQjQM5ikrL+k58o+nCdSBHhX+IjuqGnR6jAQo4Fw5l/O2pNAIKWEl9WkYkxxC21qT848KPsiMa0ObSPlF2aZLf3k4xAcZWlaTnH1JckBX/unqEFx1alrOc98ooVENYAFfHHFz5e8DoU7zYjaHCnfzC99kr6Xwm0y0rRc0cuhv94U684pxxWVSuEG11dlc6PJ1Qh9hYW2sVBFkntK6rDDOwN0LmV4zkQnylQqYmF33FcFPY95VWHTRFfEV+8PbSPiHBY1K+Gx7ozutmtSevgzO11Cxj0vhNkzt8MyryquNiqTpTYt9zkoFYLzxx5hmSOCHmVXVD3wh9GKuUaDZM7fDMs8qrjYxHSm3AtUVMH1JguOrK1nKTwlMr47CByj4vNCnXVXUJFSYuiqGBkRp18LCMKppTmVAdbxHIpPkn6j4p80UPFV3wLfqw1z8oxdYbCdJznvA6FO82BWg1j+Xq/V/aP5er9X9o/l6v1f2j+Xq/V/aP5er9X9ofmLt3CuFdNFTZK+l8JsU6KYZfFaHPphS1qKlKNSTnsDTDanHDkSkRV95ljm5Rjuc82o/ebpFZlnif3E402iTdV3B84vur/eyT2ldVhhnYG6GJavFbbv+c/8A5Y1KNmhcOXQIurYU6rOpSz1R25JFWCB46Ca3eewKSaEYwYQhLgawyULrStMhgTKptLtVhNA3TrtZmhOpRhE1u4KtPfDc2ZxLgSDxcHTKNdj3Rnda8XULVfApdj6B/wB3zj6B/wB3zhtlLLwK1XRWlkztdQsY9L4TZM7dodJSyg5L2U+aCpp1D1M2QwQRQjKLJdelV0+fFYxLjxiVHzWJbQKqUaAQO2VLcXnoaCCZRakLzBRqDBQoUUDQix6WORSb412TO3aHVFLKDkvZT5oKmnEPUzZDFCKEWS6tKrp8+KxT2VeRA0mFOLVeUo1JsDbSCtZyARV1xtrm5RjiTaCedFIq83xPLTjEJYaz5T5I0wlhkUSPfHaiD3No8bnVaFzK8AD4tONH0r9dY+UFUq7hfuqxGClQKVDEQbErJ7mriuDm+pacpMcU+bvHckXW/wC4rJAVTCO+Wrq70OhTvPepX0vhNimgeJLi4Nef/eaxDLSby1m6kQG0AKdP0jmdR+VpQ4kKSrEQc8BbNe1neR906LZeZPKUnjaxiMSe0rqsMM7A3RXymU9djM0oEpSeNTQYwss8h1PMYelVG6HE3a6I8Pc9gR4e57AhmWv38EgJrphHTp3G2T6O17ozu4Ur0qd9kztdQsY9L4TZM7djDSuSVVPmx2hxIphUVOuxKtBrYhxT6kXU0oBHha/YhuZcnOQci6CKduMfqCKtOoXsmsP0z0PusY57w91kzt2MNLxprU+bHbfSKYVF467GzoULMADxWR7z/osShAqpRoBF0ULp5a9NtDjEL7XbCL5qYdf8hNRripNSctiptwVS1iRtcATyBxk8VznFrJPKSLh831NRzHzxVJqOBg2GytW6A5NkPL8nxR84oBQd7HQp3m3KIyiMojKIyi2V9L4TY48rK4sqPnscfI+gbxaz/p4MwmnGbThE+a15ryHt4ESe0rqsMM7A3QzPIH0fEXqOT/ee2+hSkK0pNDGKbLg0Oi9+8BE+xgvvt4x6oS6w4lxCsikmxHTp3G2T6O17ozu4Ur0qd9kztdQsY9L4TZM7djPpbrZfYPAK1kJSMZJgtyXc2/L8Y/KLy1FStJNbLySUnSIvurK1aTZL6zuNkzt2N7Kt1svsGxG0LHnfKWT77L5/pIr58nCu+W4B19VuBYwd2tcaY/o+xH9H2I/o+xC2HMFcWKHi2vI0OV931PVJpFHOKdOaAlAKicgGeA5Om4n+2nLAbZbShIzDvo6FO82I2hHIT6o5CfVHIT6o5CfVHIT6onenXvslfS+Ewunkm2eGfif/AG4MyTkwSt1s5tpiT2ldVhhnYG6FNOpCkLFFA54U6wlT0rpGVGv58ELBJYUe6o08+uErQapUKgwjp07jbJ9Ha90Z3WzOpPXGSMlsztdQsY9L4TZM7djPpbrZfYPAEi2cQ4znULb6JZV37xpFZhhSBpyi2X1ncbJnbsb2VbrZfYNiNocCZ03U9fCZ6XqPepjbH1TOGmMFNPf38dCnebEbQ4U7+YXvslfS+E2OsHK2sp9RswSzRL6bnnzcF7Hx3u5p8+X3VtU6R9K6SNWSJPaV1WGGdgbrSpyXCFnx2+KYrKTgP3XU9YgdtM3UnIsY0m1oHK0S38vdCOnTuNsn0dr3RndbNak9fBmdrqFjHpfCbJnbsZ9LdbL7B4D7mlw2LmHBVLXJHPYULSFJOUGHWByRjTqsl9Z3GyZ27G9lW62X2DYjaFj7XkuEWJCsjoufLhXvIcCurrtvus3nEqKVG8Y8H/zMeD/5mPB/8zHg/wDmYIDIJTl7ocUeD/5mFJl0XAo1OOv1TO60dffx0Kd5sRtDhTv5he+yV9L4TZ2wBxJgXvSGWwKSSCMYIzQll9SUTYyjy+cWl+YcS22M5i+AUsIxNpO+xLbYvLWbqRzwzKp/popriT2ldVhhnYG6JppE66lKHlADFiFY8Pd90PsTcyp3ud5F7Xj32TaHaXcEo+61zpzuEI6dO42yt08kXTrFr3RndbNak9fBmdrqFjHpfCbJnbsZ9LdbL7B4DqD4qyPfY+x42JYtdKcYTRPqsl9Z3GyZ27G9lW62X2DYjaFgmAOK8PeLUsvqCZgf52lx1YQgZSYcabqkp5N7xhph1g+OmkFKhRQNCLOP9C5iXzc8BaFBSTkItKEELmDkTo5zBfbeUHCak6dcBuboy55Xin5fVU7rR19/HQp3mxG0OFO/mF77JX0vhNipfEFjjNq0KhTLqShxBooHNbdTNFxOhwXvfligWyjnS384vzT63VfeOS3+JzCcX9AH4rJPaV1WGGdgbocVTivAODrsRMMLuuIOIx3aQqvShzFBl0NiXZPKANSrz2sNLFFkX16zC1D+mtKurrtJlJhTVcoyg+aGpeYmAttQVUXAM1j3RndbNak9fBmdrqFjHpfCbJnbsZ9LdbL7B4Cl04j3HHXYl1pV1achj/kSxvaUGC3LN4GvjE47ZfWdxsmduxvZVutl9g2I2hYphWI5UnQYU06m6tJoRbdTMFSdCxWMSmk6kRefdU4eeEutKurSagxfGJxOJadEdutDiL+k5jpt/wCO8pA0ZvVGNLB9E/OKYUNj/tikVOWxLI5GVatAgIQKJSKAfVM7rR19/HQp3mxG0OFO/mF77JX0vhNuEQQ1MpGJeZXMYwM00ptXPkOrg0GMmEzPZJNxvMznVrigFALJPaV1WGGdgbouAhLzeNpXVCmX21NuJypPBRPTrd1lPGbQrx+fVY7LuchxJSYXLPiik5D5Q02salfDY90Z3WzWpPXwZna6hYx6XwmyZ27GfS3Wy+weAWlYlDGhWgwWX0XVD38AmhoMtkvrO42TO3Y3sq3Wy+wbEbQtvDiPjIrTzGMG+2UHfwQhCSpRyAR2y+qjihS4DkHPBQsBSSKEGC7KguM6M6eFdZTxfGWcgjBNekrOo/UZXdwzH9xAyaxm4c7rR19/7ZVNLbNwJoE1jw9z2BAV285iNeQOE9MGdcThVldLmSseHuewIbm0za1lFeKU6RTgFqYaQ6g5lCsVlnnZc6OUI7nNS6h96ojG/K+tXyiszOkjQ2invMVl2Bf8tWNXAaSp9TWDJOIVrHh7nsCPD3PYEJRluill2aYSumQ5x54rLTq0czib0YpqXPrju0+kbDcBYaLzg8d3HwMHNMhYGQ5xqMVl55aRoWiseHt/p/vCJszZdUkHFcoLFt1peFI8LX7MeFr9mHCl4uX6ZRwXJgzCk3zkux4Wv2YRMCYUspriu2OPmZUm+a0ux4Wv2YRMCYUspriu2trU8pu4KYhHha/Zjwtfs24N9pKxz5oqxMqRzKFY8IZ98VmJlSuZApAlGu4ICr3FEeFr9mETAmFKuZrtjj5mVJvmtLseFr9mEzAmFLoDiKbULU8pu4KYhHha/ZgHtpeI+TwMG82ladChFWHFs83KEcSYZVrqIxvS/rPyir8ypXMgUiku0E6TnPAvONXV+WjEY7jNeZaY+ll/WflHdJhpOoExV4rfPPiEBCEhKRkAH1KXZaks9zDinzRcmmSnQrxVajwZ3Wjr/BUtPNpcQrKlQqILvYxX/hWdx+cFp9tTbgypULZ3Wjr/AAXwc0yF6DnGowXZSsyzo8cebPZO60df4Mlak4J/+6jL59MTaH7qkrKbi058v2MeljJKVglXa38seAL/AFIDboXLKOdfJ9f/AFSpVqXbU23dvXq1XUVxcBK2HnGlYYCqFUOQxLuPOLcWb9VKNTyj9uT+YXuMchPqgTrLSG3ErAVdFLwMNOPrADVUlSjmH7Qe15hp67luLBpYFTDzbQOIFaqQHGlpWg5FJNQYK1qCUpFSTmg9rzDT1MtxYNLAp95tpJNKrVSA404lxByKSagxemH2mR99VIuNz8uVaL9hcdWlCBlUo0Ai+w826mtKoVWztczTIeyYO+L3qguOLShAyqUaAQTLvtOgZShQMFhmaaccAqUoVWlt6ZmGmQcl9VKxcYnGFq8kLx2I7ZVJiYTyMIU3xqsK3FJQkZSTQRc/iMtXpBCCDUF5O4xLa1/GbLjk/LhWi+Ivy77bqdKFV+2zkw+q62h9V40rmjwpX6SvlDfY7sZLuLF68okUr+0NyS6L4pwmg1ywqUWe5KVgq8x5J3WMdjGTyKJ9JWX3QhlsUQhISmClQqDlEGXUaMqVg/RPJO732S/YxjHcoPSV+0NoYAK6BtkHfB7I9kpl26vk+Ur5CD2s8625mvG8I/g/ZAm5euCp5BzU5jE3sjeIe/MH4U2Dp2/gTE70RhfYyVVgmVKwj6+bJT9oL6X3HHCi4a0A/wBxWPzNK4JtS6aaCH57shMOGiqcXKT1CFzEgXi4jHgzxr2rni7PNupdaVdq4kgqGYxL7LfxGFuuG6hAvKOgQoXy1LN46Zmxm9KLuEma+VfHyjtAu4WTdVfbOgjdliW1r+Mx/B5Am7euKp46vkIHbLrrjme6bo80I7Idj5hy5WlTlTr0iGptIpeHGGg5/tq4w+i+2t9dR5jHgQ9tXzhcz2PvsutC/dvEg064dYmVlbjNKLOUgw12QQMae5uas3+88Dsg6cbSDhdY/wB98TPZV/GQTTaVl/3ntan0DG3xHNk5PfvgTrysbKDhtaYmOyr45JNNpXyG+JZvMlokec/tDTSOShASLGnUYlFkH1ExMq0oG8Q9+YPwpsHTt/AmJ3ojE2rOXAPda4w5yHElKtRhZlUKeaOdCbyVaxlEXJyRHPcVQ+oxh5ZdU5CDlSdBiX2W/iMTRTnup9agIfc8ZT9PcLEqOVLwp74lta/jMKmpOX7ZmOMqhQVUrlOL/ccfylP/AMZfzhco/wBiu5rpW7Lrrlrph1uZZcaOHJAWmmKg+2p/ML3Gx5bqgCpBShPlGJqYpxeKgHf1Q7LOclxN2JvsWrEFODCDnT/o9UMy5HHpeXtHLa7Lu8hxJSYnexisi1gOeieuGWSKOEX3NowzOoFQ3xHNRyf7zw3xhhmkhLic+uCpRASMZJhDcvUs4kA/cGVW/wB0TiE5cHX1Y4mJS8MIF4QDSKU6oU44oIQkVJJxCG5pHJXMpu6hiG6J3ojE10o3WvzTLYcW2m9dOjP7ocK0obebVjQDm0w4J1CC2Ek3j4vPE55N1FdeOJfZb+IxMy6calI4usYxDvY91VwuKvt1znIRusb7HNKCihV92mY5hEtrX8ZhQe4rJURX7ish3eqApJBBxgiMOpIcWTRDd6l6BNrl8AFKISL96o05Ptq9OMzjbV9ZUnKCI/nCv1FxhJ7sgV6boxnzmEy8ugIbTkAsXM3RgUKwnmGJPVwVPADAJVfPOlOIevFYpC0hSVChBzxh+xU3gTmSokXdShjgInOyaVNc7q1+4wQzVTiuW4rKbMN2MmEtitQhZIuaiIA7KdkytoHIHFLP+WSG52Xcabl21IKW8daAAQ/KoUEqcRdBMPNuuocK13uLqtKVCoOURh+xM3gdCVEi7qUIwc52USprPV1a/cYwDFTXGtZyqMNTrb7aUoCcRy4jWxUzKuBh5WNQpxVHTzQG19lqNZDSYcOLVHa0q4MOpYUt1Yy83NDUo4tK1IvYxzkmAl6qXE8hxOURckuyaUtczq0e4Rhuys8XdISoqJ9IwlttIShIokDMPty63KMuOuu9z4ia0BymFOPtlDzyqkEYwBk4DyZRpxx5ziC4mtK5TC3X2y288rIoYwkZOv8A9wJ//8QALRABAAEBBgUEAgMBAQEAAAAAAREAECExQVHwIGFxgaGRscHxMNFQcOFgQLD/2gAIAQEAAT8h/wDjeyPfWlGHUE3LtZ9T+l4ZV5nRM66QmfN8PWxYLSiEeTUyOCH6h9utFG/NYckyf6TOvcwwUeJOGE2a+lY4NHl4RuvKx5Jg96jDwTzGx0oYLSiRP6QuhBdmPPN0PFTuAbq7pm38OMGU3p/rtSqp7pMXk9+X9GzkgUsw/FTTJz8HNn7cvy3+xui6OXwfFL22xfodPr+i0rESFOtLg4acaid1D8eqfsnU4FZyAju9nKiZgIAwP6L2nWxN+veoQDYdKyk42KTA5V5FT540l/q5dvFZEZncv9G7TrwG8bXwrF3OfHDMg/IGy981iNiLz3vg/o/adeJCd3xKvi9TMrDYMXHufBUO474LzZfj/SO068bCai9IUJSIBAH9JbTrxt+0f0ntOvG37R/Se068bftH8AxzYBB6GlWXj1jEf+jErFGCjOaYm59Yis1DzD/y+M1ZYq9723GSXmmGdMlBiPFv2j8AK/W4b1/Vb2+KVBwdx04hVBECEJwre3xV69e1SXRy/LicoUK7jvhntzsZ+8+2dTlQeHdWSwPUfzoMSgdYKIvm/qvuv6r7r+q+6/qvuv6p/gHKeb0sdpScnHybFMoLW4m47Pb/AJVCIAYrUSTuveb4etaPNPgMrIxPo5lSnY8Th37R+ITvmvFuuv8APenNlzpePHm2PKIJ1KPF/f8ACATIWgnS0QhqXKXC3ddVYHDvuijKNSgFUi0S6wR56pL/AMoW82951UeaHuO7iYO5T5pvG0MLd+0fiE75rxbrr/PeNciClXyOZT2Z7gh7Iac9kvQhS4eelF3UAgDT8iHwdu66qwLFAlmUPSt5/Fbz+KAiYMrr9LDT5VO5Nf4M+9Co0g76/wDJQRrzOgZ1fzOR83w9fwt5DeVKsegqU9Vv2j8QnfNeLddfFfeBnO6Yvp6ygnLs1pwgXkvqLU0k61EAzfLTuXeK5zeZW+sUgEEbxLXdkcqIDCE1smBTTBeBBHMs0qEX9KiHJJluyA9WpAcvC8lSojSL4Uic3S+vn5URcZCRNShKBBcCZPOjSdmBkHVdbb0X+Ec4ol6VwUnOxuuqsCze9eEK8ApmA687AV/hczLk68rJrkSZh1sBABpYQRzeVSYhmR2mL4qcciL5msFbo+zSN7heG5ftwaa1nFaBnUoHRiOz90r6DfM0r6LfEUEZmRE7v3UWwcjqlsuiBMfNgKJdXhEE5tSoxyO0xfFSjkZfM1g7dD2aQrchM3L9uGLyeZ0DGpaEMk+H7ptQenzJpCZPX9dMBmi7zF3imA4TCXlg9rWZgSq3BQhlmeTPtSNxdd91bD+Klh2gfpQzmz8WJ5rAKss/wjBEXJu2ZvpWOgR5fyRO8yjt+eBMAT+ITvmvFuuvhvMhRebwc3XQevNKwSyV4nOe3rfzaemDyxrWooazd9LHjVueiiYj64wPnoU4tF64BoGRwqrvBYmRy0a9+Lxv+qzddVYFm968Lxll4Fg33IsFMFLo4UETBb/3HyWPvEhz0O7U+1XH2Bwrr9GNHUrSKNOxLN1yLBSYUkh5nCjyefH/AC+S27asw4Orz5Vjf9cvEGzdj3rIOfTKgGzSypyi2N6tTyy4inOrC5lXWZesdD/f4ORXeawagejOD+S+GtHoGXf0q+XMW/rv4hNwUwQ6V9Wp9Gp9Gp9Gp9GoYMF5ZvDHBfKiSbugx+6fsx6VOK2Zt/QaJT3nLrEHmphplD6i+1NyBsCzd8u8W4KSzbsp9npZu+ljxq3PRQbxAc1PbysHxGryiV9CgcRYvfUBV3JBjwwBxiYL7FoLgZJhShSdxcjJRsHUZFmZaWgX76XqUCOrBykMZa2brqrAsBLlubonV519fV9fUYWyCAr1s8ZZeBYN9yLRZHLKhryVFCk3ZumVM2RCEI2IIwD0P9LFQu8bHv4sQCYbNaboXci+mdBQ56ItSkNtKxExLEQ8YXPhPSzdci0jBywoa/6qLPJuzdMvNInIhEhGxAW4+l/tPaxYAl9zdz2pKUosVsw0EuVofL+g9LvNCnoJh6y0azdb9PejIvvPhmKojJxcVmvOuW3G67DrNuPVRed2lYXqqgZ4ZXoOD4pm4wEI6NiFP9w7Y+uv8LDLoOXRoPOzWJ+AQ6hcduvaohj5eHRl7/8AmE3yJIhN0737FiA4+oWhJCMX+DQWgd6HkGiUQCWsr9b9f8svyUckplEw94xGt30seNW56KNvBB6ixzrg4oEY9Zo0s54XUxO9KjThJ6q3l81vL5ohUAWQwI4EPg7d11VgcenjLLwLBvuRYAYxFzBc8WwkAdIw/FkJYj5WXZRoXOa+ifuiDwiAKwmM1qHQNAdR9lQxg9eibHjYSPXZuuRYBUsdzAw8WmDAOgYfYsY3FR62IeAsd58WHamGzXCjgi85aHK1EAhCOdaPT/bpyo24lQc8h6xSJyJTm2T6RAl3N2I9eAiYxBmXD1GDvytRvPsgeI/hRREUTBKuTjpxqJ/UODWL0YdTlWekY7trqJAAgDL8wn76vvq++r76vvuC9QJcCvPtMpsmLHYXZ4OGtgyLRv8AtJ3tZRxo6I95rd9LHjVueipbs2HLGdm60fGMGB3KgwvlJd/2pEKf9vEdpoahTIDwofB27rqrAt7NdmtNZPGWXgWDfcizwfdt23UswOtgiRkIApVnCu+jo89KRu2Mo97CwzgkJV39QcZjDgTbrkcOG8alm4a2M58fYjfIh6rnu8Tkc77TaNQKbvlXvyrfX7rfX7rfX7omXcBj72yfaQ/X8PKeuVQobDtV1rcsvRU8eMJf6uXbxWTWZ3P5xO8a19Xr6vX1evq9fV6uEb3bfLXXHpWH0sWwxwnBMJ+k6wOlgZMvga3fSx41bnopbrcKDU4ZSFJaHbpRfhwcvBxGjk/yjamCwRweBD4O3ddVYFhGU++nIVyFQ0LPGWXgWDfcizwfdt23UswOtj4yRDm7H0tGCLBCfrREg3YfULuFNuuRw4bxqWbhrZnY4XIevElyvxbF7I/iUJCCswb0f+ETvmvFuuvgvx1T9wsvODHTf8jvwjNwI9bQaKJdqA9w1u+ljxq3PRbiwSTuMXPcaPOjIGzpR0qIbI6/Dazs9jD8hwIfB27rqrAs3vXheMsvAsG+5Fng+7btupZgdbFXZuvQYPEWCjiyFy8+3zYEoYBIlGrVr3USfrtwJt1yOHDeNSzcNbEYyrpN3ixjobPm3+RHfidDnXm0LXZQpzLh0Sud28653bzrndvOud286bWEEWWMN9c7t51dB0JSe/8AE79p/wCGJ3zXi3XXwX3KUc9AHs97FguIQowShiPC3GzhlbiC1fwavKr2hcWjNc39WOdBBmmAp1ZCbqze7LW76WPGrc9FExJ9wFBhW3/SmhUAhdEIeiw2FjmSSHsk0YWBvMLng0MXSueiP33t3XVWBZvevC8ZZeBYN9yLPB923bdSzA62NixbsrDToJBqYPx62qKXtNRf5ngTbrkcOG8alm4a2JnxXte0ebCRkUdSirNF9xzHPlbjf5cFY5NYHKfrpURROVycn1pczSskxLJS/dQE8lAvfKpEtCMXK3MM6vc3n4s6iVgDe9XrQgEZHB/id+0/8MTvmvFuuvgvWzeyysOzg9ad2DGlYXIlyXjQwowH5PlUrX1Hk1HpsG46DA7WrMQiCx1+B3dLN30seNW56KuXnHnh5Hmxw0x8TqUgTWIC7Jd5rwILXNy7lY3FTzUDMWY7XHajYmV6TaZEy0dQrqbURe6Gl4WbrqrAs3vXheMsvAsG+5Fng+7btupZgdbCdmHnk9b+9j53SFQJCY3N7OHrUKMIZnbp14U265HDhvGpZuGti2CdH4O9af5NLK0eBYe6t/moZzG+8rUN8wncdDApYEUsmi8XWN+mmN9gAfWffrbMFDLjfddUBX1ajOfYkr1vaSiKmVcWyRkFy3y4FGpIFgBgfxO/af8Ahid814t118N9xdSK4235UryLyOqwThCBKIAJVpsYXv8AVOWPSiZgQAXBZu+ljxq3PRUjRLMJzXJ/VP2OC3n+c+DCmdMAr1kjZ6Y0cc92DGpK6wLsgcm3f9Vm66qwLN714XjLLwLBvuRZ4Pu27bqWYHWxKB1w3FMQ9MNRzOAcqQSi4nDgTbrkcOG8alm4a2y7CxHd8D2pVljOHMOfCuDYHK9qdqjd09w+1R6RBIlYh3pv/ec/viuOQ7Xe8qFFK3r3D/BrvD6Ruac+PftPzxV2RguW/wA1ub5qY3BtPElQWIbyYrc3zVxM0EGT5cGMhCOpk4Z7vs3+a690H8DUu5nJqkGb3zh7VBDxhvru4duCF0RHeR+q3N80sJtutQ2wGesFh/pl9MXlOQGl8iKPc7VD8UxkjRHyvxV9GISY8jA9J4BPLZPyLymOSRvMT2okv9bQIcgccRq2EpA89JKP8XX1uoLlDCRE/vhSDzIDFwfFfW6xI0oJkT5sVpTAGK+t1iZpQTInzbJgCAszX1uiefDt04nm6HEpMK37dXKGsUKgd2s0dYDKRU1nGvrdNf03wTInzYxSnAMV9bpIUSAYlsvgYCzNfW6lzwOHgdIeMgp9ROzN/mrsRy/sqVcDktAIM2SzU5OkYvWW/gfSHFJuuT3qcpxl8k/VM91WuQ25woIU5e1P3RY8iGDt/C3tXfnfPJ1PNQLKwd+wwx4d+0/pWWiomDtR4e4tx7/t6qyvuglu/af0vguzl+cKuy6+Bd7MPSuWlb9p/TMyRsAhdGHu50izCy4l67Ebz/f+MYBqiS5nhX1n9UliYIWfQ3d4P/VcVLBci8G7GMG8ovJiLWnOVIsCSmStI0gy95f9yBFJKJYhQpBVY4XC81mL6gvCLAdhXlD0rLZM8sJjpYmHoGV0vq8U6B0CUqii8AMVabK0c8sJiyEugcrpLWGGk+gSjbzgjPpNEFJghF6TjZgKdHqFpwJSFI6SWX5UJCk3hemj9DJAOa0rR4DR5xTHvEWBBmOpaWyAHsTjRZbwBLtjYuxFPEF16/HSwEpzDHeoI9EeuFEuRCMiWjVcDMMpOsYVCFsQk9P+2W87BQlGBfnYOxIWURw6XplirhvC5eyey+KWGSizvtzNsndT6MCu0PNQ/iGgEFDAFCFyUwqQLnf9hvNh8pXHpY9IerRNThVIYuhf161JkOBIzOW7QI9CJKoNeJXmRPo1KQePuedL1ML+K0ECYEfiZyQWufN0KUvuBBUbjH1WYzYnMGKjsq5F2nFwBIDxFDzWb3GeCdWdZYlMGN5i5TysrEhRTkErU+3QonlWa/eRFXkXrHpcoosxxGeIzZsm51sa6nqcawvrdGcKAFxeIXkifWrqW3BNkQuXppQOH0nuHqekf9qGsKnSbzLpY2ExCM0TE3mi+peimTLROqRjzK1PkNTf7MnZUlPEl8d/rcnRRRQBa30OgxaxteY1L3a5WY+As4L3qkPepBCjyo9DspEy6LnA+yrpToYEWXhnCawnelOsQr4QJEwWLfJ5Fz3bROWGsYIafMd8GmCN5uWp+KY2LdrQB00JGgNbKyeQhOinhoqBITyIzy+tkU0r3A+bGpbVEvmYKHOJsA2Ml6EEARKzCp7nFOWHPMf+35O9pTepAG8KCururJL7vVWLv06aPUxq5CNoIzHV8FBHHvp6MO1oxT3YMetLHHULEPR2iu/OBiJ2uO1TjSwZQS6TdQ9vozcQjscfqi7rIQBq1lqSmYvmhQ+ZDibMqQoJIb0CTp7irsHBwarUrWODEBPQWY2jTbeEJC5CeEntVz0FJvhF7nJ2pxAwyYmByinnPfUPmysEd6HVoPUKDEFgrnuLodGy/baLCE6t6ul1jWEq5wzp6QkuqizvISJrUYB78qb74cC/D3rI4gIXXoZydv8AtU9jovvmVtv5oPos73p9qGS8b17zpQFWAo/3l3Yxyc1F68LPVzjI9WR2NiVuHyBxEqemaWzwDt3pWXEpA84gfWh4H9l8jl70gkJJTy/6h7kx271KYtP3TB1Q1c4VGDFmrC96QRLASizSCW7BnaMA0ISJSWTm+flvEdu7UFKEjusQPrRaZXrI/wAoanKbKf5WKAWXP3xq+Jvo7k0B2Cek1pU5cBuBglw9Zpngpw39pQsyvgfM5e1Ks0XEj2kPWgsJwadG9Dt3KA+sqAMD/ubkhYZaQ5SdUq4SedcwT1e/AGHY2Q0GF094q9nwiXIEyvl3P/sCf//aAAwv/ANvPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPJbffTt/PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPN9/ffff/PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKssvfZLPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKgEMpvPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKgAAPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPqwAAPPPOPPPPOPPPPPPLvPPPPPPPPM89jfPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPJHr3CAPPPKlPPPlvPPPPPLnvPPPIgvKfMVNn/PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5/fffTRvPPKlPPPlvIsgmtClvsolIEnKffPH/dh/e+5jDPl37XvNffGpXLvN/PPPPPPPPPPPPPPPK+/PffdDPPPKkMsslvILqiMqlgnhngknKbjHPP1d6uaqQV11d3+OXhPdfZD3efPPPPPPPPPPPPPPPKgM1/rfPPPPKlPvuljkvPHlqlhmInAgvKejP8Az9Vf/wB6NueXVV//AO/PPPvbDn7vPPPPPPPPPPPPPPPKgAAPfPPPPPKlPPPlqhPOElqlsvhkghvKffPPP1V//eL7XF1Vf/8Aurfz31P/AK58888888888888888qAAA8888888qU88+WsqAwOUqWuiG+iA+p9888/VX/APb/AM/1dVX/APvzstOY/N4d88888888888888888qAA8888888sc88sM8sc888ss88M8sc8+P8APDXzX/nvHjT/ACx+87y4y77y5x3zzzzzzzzzzzzzzzzzzx4LzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzyxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzybrzjDjzzjjjTjQzh7zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzxrLbYrb77Si7wJbK7aI7zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzIrZyw6aLTrzzS477bKDzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz//EAC0RAQABAQcDBAEFAAMAAAAAAAERACExQVFxgbFhkaEQwdHwQCBQYOHxcJCg/9oACAEDAQE/EP8Ap1Pkq4F9QiwZL93DbuVIpDNftnzrTgYTB/hMDv8Ae6Hu+avmsXF39rvWDWmCWJ86NS+tl5qf6fwe5bhVobYa26lGkkcf0sHgMWpZ1wsHbHWzf+D96Bd/WpUE3TcdHHw9PWT08uNX2JdKl1hgFxt7sv8ACoHf7zR9nxUlp5e6vsQa/wDCqIErUZPK6ft/S/8AMHkIvtDmuh7Pmuh7PmmRBgtG7ShTRYEWdGRnxQdsq0fuJ+1QzOu46GPHWjr7Mv8A62piBHBoWU3ez896aqDB/K8o4aASoK6XuVP0f8USJiChDvftTnzLbmsTtYftEbZzyNahd7uND3fH6bT7k0aMXj7nzt2/J8o4a43D1K6qjuFQdkGzOWgiKhexUk2RELCbbXHLtSvBHN9O7peXx1OmdCClbCgIdPA7X79qsI8RS9PG65bdqWBCMNF0VD4KZDdXLCc3F+30rJ2jm+nV0vL46nTP0FLkZumR18UBAOtvM0bGwA8kVFmF4vD7PfCopYN77GbWJjO14u8UXD2nxTLRLx9zjpSIIF5+CDQJiUpAbPc+O1HRJifon09F7uHPSkoUZF2+e+35PlHDQx2r+8113doE4Em+ca+4yK8fzT7DIqLKRKtsFxHZp3GqSMRdgxZRJXBO5SORI3TbFl3Wpe7GC8cC6ok2pZ2uqwqID3JqFsB5PavvMiokpEq2wXEdmlMKxIxF2DFlDcxE7lBcha6GG7BWiCkKIGKSuzYG3xRdgdAdk+GhUSZBiri8H91chHlxd6SJCXt+xhrXboYT7pFBCjBMn74qIS297e52/DsvszB1Kg/c2+G/erNfIxdD6VL+5t8Nu7+X5Rw1kcLJi9C+3P0zCuRfPsV9xkV4/mn2GRXg+aeNwfSwyxXIxfuNWW3XF1akMZJJ7UCBAV4Pmn3mRXiOWvB4NX1G4oh3n4q9YiO6D4fUROfFvoxaW9iv8yngQ5URlzOT8VTf+Z5Rw1xuHr9xkV4/mn2GRXg+aeNwfTMSDln2q/8AbOyk+KFGSr08J1ivB80+8yK8Ry14PBq+omMNmpbxNXCwT+9qZBCeep0pEBK0GkkKOX+UI2lGB2xCjqX2RllFf7b5paAzWnm7rUhiuqo6Ww/uPlHDXG4ev3GRXj+afYZFeD5p43B9ALLHTPZ8TQyiAaiNQXb1U7THtU14Pmn3mRXiOWvB4NX1JhCMlDoYF/uMzjGoER1JpeAswJ70QjDc9NOuHhiTCxOJgamGet74iOCSVbgNKRABi0h6Trm78fuJyWq+w9ymMpXkGuXqPjgQWFxtRiQCMLttaGxQILDDaiEgEYXba0LiDH/a+4+HpZzBledmSrsGgfFIEws4Nr1RaMyARhdtQWylhYYbVaZIjC7ajcQY/wC0pZx+HoiJCUFeHUHzf5oiAmgUxYri2voSXGTaeZjakkANilZfh2uP/G3/AP/EACsRAQACAQIEBQQCAwAAAAAAAAEAESEQMSBBcaEwQFFgYVCR0fCQsXCB4f/aAAgBAgEBPxD+HUFUR3P2R8soiNPsnPOCH4ah4TNmT2Ozjn1giWcKgWxzHPsZiWWJiXDrijLH8vY7rjsiYoweyX2YF4JsyvAvw78G/pPgnwSvpCbPMWjl9Kz+xNjZgCknO+yIqHC8D4Jw3wBa3nzQlpLktMNGw+kM1GeyeEuhOcBwPA63repxmg/R11ezyEIArEWV5Ivasekx1SEeXAVog15s+FBrxYipiyvJL8H+pjqkI8vRjsE2qNyENnxEMbTkd9YvyfaKLxYip8iJWM5X3QBa4MPuzd9uB0uXw1K0Iw0JXEB5BPggYjsCbfT8ztCIm5pjuCEtgjXlmItllF6pVf1nbERNzTHcDKYdpgIprZHuaIWxCEaS0LuFSh4PkXRu1Mfi9oXamLwOJ0qVq8DCMI8DDUWddp+l/wDJdGqnYE2+n5naE2ek2NHMQOhBXIuBWCbXSdsT+mbEdoMrpEiGovQUtj40JoVNzyL4bwOjwkYS9SMNR+jrr2BNvp+Z2hNnpNjQEGEmjULvU2uk7Yn9M2I7SleqCy56AAvaXFFVo2UqZ877x9Yek3A+ReA43gfAYcBHQ0H6OuvYE2+n5naE2ek2NMk7TA+IA3Wm10nbE/pmxHaIrIJ8wWhcz4qMu78oCc+AKSAtggC3abBseVPArwK4q4K03JUPsxqEUQhagRRCFqO8zUboixVw+hilq4EUQhajvM1A1knMIrnEVumHGPqTdl+UrQ/wHz9gvic/r7qfzZ//xAAuEAEAAQIFAwQCAQUBAQEAAAABEQAhEDFBUWFxgaEgkbHwMMFwQFBg4fGw0YD/2gAIAQEAAT8Q/wDG9kJIs4qLSyGWd4ZBrQLCBt7oGVxL5zb+F7pHayNDvmOCbwU0FtoEfJtotfyGKZVVVWVc13on3n52SFx5KjcsAAO0DK9szdVhdmeUTIvcyQf4TjO0AfK62KKZ9K2cpd6xLZi9NcG9tsS5BoFjT0mwFm2O6s8BKmesAq3C7ovfMrko0AiCVxEsjv8AwgyeeXtAzHJki0ndg/orNpZWq/hCXu4p+aEy+UTaZyqzp4HGxaOm2bl/BqLDVZIFJsCSVTPVtWcriT0Lb028lBBB+NBISSpiRg75WZ1MgGj3ZMAETdZiYlJz/BbyWEQjptRS8sGzqa9vNG3bU8cPH4zNlkiA3axypxTBLgGyczfvi7NnQCJDwBYAMj+DW+4U4y4Jk1oSOGb67c0IhBEkRs+uYYzO3BdelT2qAFHY5DxJvmqyszQJd1zSLrK6/wAItzRer3ezbtUQOV59Wvzx6FAlYKtXMiPbCnQLyUhTvFOvhYtkBx/Cre+IbXWuHXvUKUcy3UKkQZjO8mF3gXikjI4D7oB5TsTL+GG905CNMSgTojFBsUHOyALB/wDu1v6b+m/qaYoPXqKQeFmheYmELRSO4H9QEAZK65bUiHUAP1XMxRXdkI/CWf8AFwNnZROxuugXdKGmBZkkGg4FnIpCgQCE/N6enr44qQCR++EgmA8lqQT7vUHchwBQWLE4SMhxZtKBAyk7/lmvb+kIkuEjcQyQgAAAGhU7vde4ZJkqyWakJiVIgTgIcR+cGYY2BIx4pQc09KFChQpAC8KkBPuws+Q7lMTNcydBDTBny/U0BNFRLrI2j/FBgsqIAM1admuSU3Rf2DwqNFTIgXQ7DpnrOETzMm3QavbG9lrk16n5/QT6vb/Sg5lmEZlnByIY4b4qxIRks+jD8IWPsnGKS3Qfav8Aha/4Wrz1qt4O3oCeAerAh7ChNM7CxdSj3MHHBg2Af/f8UhHxYi2mgOt72GjGOy1h0nmutpyD1Tly08+jX5qZXm19ddu/5fQT6vb/AEoOZIBiqpDa1kEhMFxBAeGB0bor27tHkkPic0NUVEhqC0JMCIAFgAiPyYPqd30BPAMAxSIXLlMGJhz2xiRDXNgABVXAW7s4KEEgWG0wjaYuotuE5u/m/wAUVVoZZCFFBUtMECga/wCJQHQ67NDv8DVKhdZmweT4XcqVVVVWVc13/ABAEIRJGtdIKz9Nvin+gc5PI5P4/QT6vb+QHMeSlQnvotpiDVKG3VEQbzW9/SmRxkR0PmKFHivKF4zkS4WFWkQgBVsGx21HC4hIjkjiVsBEDDqzOcMIgnBapsgvIILHF8DN+AM40K7y2CSUozsUFLRlRxQvMu1PdfNG5TuSXd1XYpKs72BdgapRD4j1iRCyJeSlKqKITkByUXzoaMaJQCyi7TEFDXIGqAm+gUV7VIJsKGYaYhPAPXJTb9SxvIJmtMAh7gZwxsSzMaYSinksg3gmu2ARrlhGRZUDUulGlfCifgs89k0gFaNB5qFJ1Iz7JfFKqcAtugIXYGwr6F0txnbRXXAVb0m5SOraiJAdFBUCRDQQ1NTDcAdVn2UphqPdOj3Nb5MWXFHymkoG8Em+2ARSpQyXkqgWutBCWi7PwWeZ4TTAXNkw81Hk6kd9kvikPKANOICF2BsK+kNMCSV7DK9oNYpxyuZr3bfUU9LaeHRC81FXCWVFk26bdxFIvlCg2xXdGToYvu4OAXVXIpO/owZ6xewjvTHaJ70r4FLK+3TAbOYe8lLomBVJusA6UykJqJ2dk1G5r/ZD+xF++Wz+izpn43tOJcjYLH5HatoPjZpq3k8EERmAK7H4gn1e38YOZG9O9lh1BnJLNkFJcmiv6uQaBYLHqghwmDW7uYz5mZoCSy1h8iMiNxEbnoZec+MAgPXEmLi/oWU6J0qQJqy0WmdA+ZfTMUOyZo2GtsQkTL8Db6E8A/LJuBApC8JQxI2To+hBISSjLGlUgIXVUJ1NhcG8KgZvIeUA5aflIQzFj23c1u+l1j2e4PU1P3DRYyM5lsn6Nx1EdcPI4B4MaBiTMdzj0IJCSUBwTszou6rQXU1JcU469Cst9adzBEoWqZA2OA0CA09KCQklFk3P+3Sk3ZDMIFw1MjH7VgAuqBdq2sxwYto+po0S3fS6GSTVBprcJc0aUNZJzEutzU1GzIf2K1g2bjtfsvU2hLT3OH9Pn8e3LBWU4ELPy5efcqYYBnhu93pkaB+IJKUF+RMhjx6shQoUKMCJ1MLigmJiY9Ez02YCKJUajK3YLURDc5dKHNVXCbrkk4Ztsg1WA1ajmCUHBhey6YaPNncz3UMuwITkRJboFOmKUoWdCAtix8ztDOLLznxgEuVIHWaPQY6sE5gAkQeawjFpYNaGzoBH3jsApcQ9pCYd0iCUkZiYokzVIXSjkQaNo6ZeIQkyjOh1BWIb0ZGmNcQAnKCS2szlnBT4pLnWKCLssQngGAFUINTbMGzLHhwjgpkiBYbF/wAFwIE2JodnkhsgNWkpOZa9K2ZBfGkqeqUufjIJhEbiNowzKquzfT0g9jCIeAGoAHhW9RhmShgdAe7S+0FlW0IQbrfYyp5hmRm5S5vLGzQmtLhaE5ETC2xArYUgN3BfI4DYlo8OmRMgMh0kTmEU9NkF9MVT1FMYo+AYRG4jpg1QK5gdZwIwF0QZYBieAFcLWKTl5u6ZVwZ/kJ7h4DVbGtRh1lnqCHsVOtGUjsi9qjSzHmTE9oqEPaiSp0BNjVQ1rPwtcfm9U5+xABSrdYtDeeNL4DAFQBVYAJVqJsgcs4LHSy7hRfH+vFlEUDMZzYWTqdVIrivGsg3E2wG6YlWW2ju2GsQ1UIgjI5P9jb1MOK09x4OmVTuzJsu1+z8F/owVDfc+O5Kt7S4FfsdZPJ/pgk0ZdzSQHWSr0YOyNliVBLoaroS0nYQ5FcHML7Be6q4O8aFcsosjtTuwAlBdVugMpukl1LUhEkyiEdEd6M8LDvPRvDhMWXnPjAITl/42d8YDLfqW1jVCA1iNaNxAxl45jwB4pEpoKbkRzRh7YvHhrrrgIKGVj0YPqd30BPAPT9Rs/BcCBOnRlziXDZ3oAICDAxQBCBY3cO+XXBnCDk3A/rC1gSK3SlTeO2CqdRTJgXaJntXhF/tp2C5jD3NGASAD/ZmXvgKJBAai/wAh7YeRwDApjSOi4YD1xFgChBMaOReVXBAYZuQphJKGw2QH8HCOGfmWBwDupRbcMHVDcOQd264sfENIHMTUqKgQiW8WE5G8ZCWM6k0ZKEEN1Q701pjUqMq8rfA+ZcwSJetkclzD0P4XBE6XujkODBuRUkWHmWWs8pXf+ys2aUQjw1HqyQLepr89aNs2plw7PHoD28Y4LdrDq1D2oAInI37oPKgPCGgBkBofmCf8xX/MV/zFf8xX/MUIgiI5JjMzaAldilcVAWbl/OFzNj3q3tO/pYwFRc645T0lRcnBHytM5fFGNl5z4wCLgnMSoFeJeoY+DmYgglLsFMB4L+Ap+MQuhytrqfFQNeIN1NTJMxs+nB9Tu+gJ4BhfQXoVD/oqH/RQc50OH5bgQK+38N84NhOMCJVXICh41Uu9D2O7ZTyBl5XKlcFGHL7txLlI3tpkhEnVjVv6CXkcD67d6f32GzBXJjuEkOxB2wZ3rckmPAvUPUvMA/cHyjF2FEpoFUGgMtK56HnoeehiZASBIyM4RDF2tt2/9n7/AF3ImyZNQrZEM3XX4UlXxOxyAXe1TriAKPHIeJPKrL5NBF3XNbrK/nCXC/c0qy/Y4r6x+q+sfqvrH6r6x+qAEACAyMeYMM3vJRU7ucJwn2s98HmfS9IYblCSe1a7ZhN8zE6k/wAmLLznxgELRgUhQj2pxFWuMgXQ2EWvuQJQm56CtqBZyKOgXHWJWbPi2uRhB2RH0YPqd30BPAMIDHeKf+BX/AoFkJ6fluBAr7fw3zgqR0LOuvAQzWduCgSsFCVGY7aIMU5ihiYBeVyJ0PCz6SXkcD67d6f32GzBkQzMszgB+Zugk+T1CeaU9bP7/EW0sjP9pv6tpIjC0FBQzg/oQn1e38IOZBEQRzGpLrva3DxhBauFgGJ+sFyfSLTuMUz2BdjfFsCYNC8Wy858egJMu5ltc8w80IHGc6BzNNY+Uq3qwcmywDBli/8AcFd2Ow+3owfU7voCeAf0Um4ECvt/DfODWrldGj2A7YR6ty0ki3gTG4dMEKfPJZiOdHSGiljAuqSy19Al5HA+u3en99hswFBLk1Dl3g98C8vCbDHcQHqmBJ0o4vcg9TTwAtrGnp79+/ed8mRAQC1hGHRMO+1lDYCZS5H96wBPq9v4gcyGCgCwHVo9/thIuaYKUaIgjUjFLEU6Suab3aXxKyMxAugZpoBXQoqSVliSGWtljIBeFazg5JFdwpRZDNIhJ753MWXnPjAIctDIBBOQIr/lVtYUNdkAuns4TUwU2a68A5KShc4wK8pP9G/owRcj5lJI7KR0D0BPAP6KTcCBX2/hvnA8kLncH6wMfAWcXjcY54aMwPah29BLyOB9du9P77DZhb/ALQhHEzm8YEAAZEhHRGiKiKwJ2+e6UtYwEBkgh/8AXYzamyuACsyGZDN14VqgmoBCRzwQe1Z/8SHQnIiYFJsASGTGZsSiGYuaBR4xG1tRLOMZyYsyltk1M1mRKJORdprLJYqzCVJXoAsvK3XUnhRlhSDIm5/esAT6vb+IHMzpoNgDdGguZZOYUJkIrHM53EsiJZwSiUAGETJHRrMMCSeRTjhjfA+KFTcm2TMOzwAxV7ekGiKbRO7O4cWXnPjAIM4sWSgLrO9BvhAKdCS5CGoKJqNR2AiYO4t6J6qYSRJBGbIEiYF8lS2CEXIpsz4kIJuQpR0lnOqcU0MiJMsIVMWmJ5op4SlLQaQhriE8A/opNwIFfb+G+cFWAbDKdbwHC2P09tERsiSI2Roz6EDS7233KYQ1DcdoQ+pdob+kl5HA+u3en99hswhGE4m47F0eFSwaZkj5EhEsiJnh+r1YLCBE20PFJDXm+E8UbXy3sucHgCgu0zMPkckbIo2aEqOE6dkm9pR6mY0jVtgsgUZWRflibZDDZugy5ieaPFWmL1gHijGHj2CaPZKWSpaUc1XNwAF0tkDe/YN2chgLnFwNAGwAf3rAE+r2/jBzEZ5JYMgLpsJZZJahpmWKQaHuh4YbekfdHyWQBdXamh6W3UH/AH7WFk9HBwAgAMg9DLznxgEJ5RiTI1MYDGSK8Q2vqBbCaKzBIlxfQoJUA1ajSSFLdrIsIO3AYlAPMEIcmZyFLLsSifd6h7MjcT1fQngH9FJuBAr7fw3zhmJHcia7osm3IVdE8DfQZZNzowyehk5gUrKC6TDG8PoJeRwPrt3p/fYbMTOhuxmAXZZOcpJuOtz8SeysOmWsPpmFkS/YF2lXVurIsi1otlyYh35pYRCJqJS09JafZMz2XDPKQiSM+mUaGCgay+BfoSiG3Rp8ANAyDuv9iTA9RT7g8m/UtQiSMn9LgLprBxty6/HBQVEEDchGPZ6iENAkrCtwmMFG5NeOsjJF/b0XSxASbk5Jolyn+JJB0ylb4097BfJpBNXqh2h81pGxi7JSWPpE6JzkOpA49Amt5ZEQykRgUZ9EigbaHIhgE+MI2+S7O4nQmHUaXHcvJO3s1HN8t9hfNHxdu5To491IeME7kYMOSQb+ieEjOtZsDIJJhgkaSwczStQ0E1iehdzfNO5VmBdsGQIxJQhPmggZX3zr73+6cNGrjq0N5+HpL/QsRzC3p97/AHQrQAI1aOl2EZ7ty0IFb5V97/dEFAAjVo6XYpjDrhBm7xX3v90EZBH7uMTTvBCblc5EpqQuDJwBQdRabIXeF9o/dBjd0oeFlHQHmnUEylElKUzmq2K+9/ul8cgjMqPVhEu5UtCBW+Vfe/3RNmJBtTI4pNAbhBm7xX3v90f2QObDO/ovqNEm3Byb5lyn69ZWOgiloaFUfYPlSyagVPaFarMH874FPZNDJOqRxMcegjt7JLeF3kNCSpagHL3oJSzRQocNdrHslbi1Jr/vPRRxUWgwD7AsH9llrLq5xvO8OaoqBI1k+2LLF5QNQ/hrBHoAMPKtzTdQrmcXBpmHHKkSDDe2Ycx0Szo/w1giAh1O6hwWmGLiWp5stD9ULab38QmmyoRSIkImY/w1ggHKxIi2k5Z5CAVaz9TQydlcG17Ob/DAXx10sguMI4uoDMTALu4hvRck/qbmIgJgiC2PUJnIcMkiYczFKBJ8asgYYLcFCuGu7oRWABwB/nIIklEkrbKGYhHxTD26V6yATIZokZtCgKszkhYIEul1e68K2ZYmUTnDthYK/BpYLBYFjijDPC0mJQiSOVFOQialCwAKrlQopQVEsyxMMTs4B2o46KBQWBY2HajsUsYyjIRhEtqNKjFDpmkhLwVdwea9gh7JwMM8lJMSgC6F96ZXY10FSoMIxyb4GXckOxIXERCLiOtIwWRBmoAOWrB1GVTCaDF4aaB82oAmIQvuYySwlNjMCFcE0gX47fmy7GAjyYUFTycyjdMXwjtgcHdUAdamqSgUm8Tl70P7nyDiJmJiDhambHYJl1ilTGhaNlTDw/5skE0sBrKrjIpIUR2L9Yl3gkBICwdx7oINXmnBcmGHO4JLgTUs4S2aN0mULpgxxEgEkoYzCbtHOrw/1mGk3YM6RDuZIIRHMSpahjssQtpgaEDCd4k0TqeE+dCsIMnSrky6ArdBJdQoj5McS0RogXAwUAwd7YNLtwjZyqJHEs1C9ukwGxKQg0gswbBJFZ93xR7QLYEYhEFESvzRGjf8U5uiIZESrLg4YaVgQPckUbfiaWGQIIC1g1ARCAQXQBBI1RACzUrRzPYCIhK7lvVVoGRSZRc8EkcALWb4QEFLLEVuukUCgrE7xJ8foUwfL1xL5ILRmhCAoGGJAN2pbrgSDKVkCveG10wgbpnODKn1DNpN4IVEhEMLqNPIOGzLd7AkLmlr/mqTUGUhLoSENnTDYVvxhwgmxi4hNkvI6VrROB6hkrpJKKq+imcDFXSWTfaoJsCg0b1iCicG/jCl12zY7YziICLtwOyP+imZS2zdW7J4lTTnTcmWTZGG2xSue1gmnt7FFMCEyhjwYSlWM7nDvEE8KmYEmytHoNTPq+KIxNSrJHZ97EQUc4SYnRhaHSqdn2REN0jUCvQ9NBuQ2WXhNZF5S4C6ACZSIiKI4BEmqwczXup3qGxP5zydF8BES/1lU9kxxxgDj7QxBlxE5yLtzCvd8YnmCEOqGpjNOQOQBjM7z/m8c6JgJ+Fm3RUykuVEqtIWjI6FA8bCiVpZ5IHIUFKNKqKG8JLqaDRvCkwS2hTOTF2GNjrDzBCGwzHRCg6GAWznogk6jRWsdyRmRyOyaehBRKuTwL1GgAxHYMI5wkHKVM1SaUjRiVGwASrVvwY81TZC3mdllimxhZXRiA6O1EWQcA0M2Qnbmp6shxOaLBROCYwKiDcVEOU19Xx6LAE1TRMBS9EO++JjGuh7rkUAWzA0V92LyJ7UwMxxoeajCElntte4kmnSay3QRQ1rkxhrBnA1nRjoIolmzNm+1A7n8JJaHeQDZLkUFhoxYkCWRLiVPDSZkJkgJ0yLBZFGAJq5ZZDJijdN7f5o8eIStNtGFLOuFTSAYwbTgd/arxvcMXlVboqqVVVaJsCVWAN6YqtQh1pKA5mw9DYlqRW0GCMeSM3kNMArnNNQhZEURpWbqWTmShoBTuqjDgJEZBEN0UT/AAQWC8IINyHEqvSACEIkiU3NJhjoeBKAhC0qFLjOUuICf6FB+FhmcaFJiqslVaHGqSu6sXijACIABB3WxQDIkkQiNkTSp7o0dnOT2gZQXofYJAQjIEY0kVk4VCeBKLAAALAaqq8Dv+QIQi5Awe6yVRdQIq3CRbsiiasQaSQIhGoFX/ZC369kcywSgQVIhUiWJvYJ2odMWclzU2dCV2VejGhJIllVGeFTWyACbKC3AShYS9RdPDIgDQAD/OTRwCEGaDBEGg3gKadPLj4zt6I6qeOIkJAYu7dUEy6kxQXSuQ2P/YE//9k=",  
    logoFileName: logoFileName,
  };
}

/**
 * Gets HTML string for template B
 * References the signature logo image from the HTML
 * @param {*} user_info Information details about the user
 * @returns Object containing:
 *  "signature": The signature HTML of template B,
    "logoBase64": null since this template references the image and does not embed it ,
    "logoFileName": null since this template references the image and does not embed it
 */
function get_template_B_info(user_info) {
  let str = "";
  if (is_valid_data(user_info.greeting)) {
    str += user_info.greeting + "<br/>";
  }

  str += "<table>";
  str += "<tr>";
  // Reference the logo using a URI to the web server <img src='https://...
  str +=
    "<td style='border-right: 1px solid #000000; padding-right: 5px;'><img src='https://officedev.github.io/Office-Add-in-samples/Samples/outlook-set-signature/assets/sample-logo.png' alt='Logo' /></td>";
  str += "<td style='padding-left: 5px;'>";
  str += "<strong>" + user_info.name + "</strong>";
  str += is_valid_data(user_info.pronoun) ? "&nbsp;" + user_info.pronoun : "";
  str += "<br/>";
  str += user_info.email + "<br/>";
  str += is_valid_data(user_info.phone) ? user_info.phone + "<br/>" : "";
  str += "</td>";
  str += "</tr>";
  str += "</table>";

  return {
    signature: str,
    logoBase64: null,
    logoFileName: null,
  };
}

/**
 * Gets HTML string for template C
 * @param {*} user_info Information details about the user
 * @returns Object containing:
 *  "signature": The signature HTML of template C,
    "logoBase64": null since there is no image,
    "logoFileName": null since there is no image
 */
function get_template_C_info(user_info) {
  let str = "";
  if (is_valid_data(user_info.greeting)) {
    str += `${user_info.greeting}<br/>`;
  }

  str += user_info.name;

  if(is_valid_data(user_info.job)) {
    str += `<br>${user_info.job}`
  }

  return {
    signature: str,
    logoBase64: null,
    logoFileName: null,
  };
}

/**
 * Validates if str parameter contains text.
 * @param {*} str String to validate
 * @returns true if string is valid; otherwise, false.
 */
function is_valid_data(str) {
  return str !== null && str !== undefined && str !== "";
}

Office.actions.associate("checkSignature", checkSignature);
